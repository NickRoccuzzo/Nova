tables:
  tickers:
    columns:
      ticker_id:
        type: SERIAL
        constraints: [PRIMARY KEY]
      symbol:
        type: TEXT
        constraints: [UNIQUE, NOT NULL]
      last_queried_time:
        type: TIMESTAMPTZ
      industry_id:
        type: INTEGER
        constraints: [REFERENCES industries(industry_id)]
      full_name:
        type: TEXT

  expirations:
    columns:
      expiration_id:
        type: SERIAL
        constraints: [PRIMARY KEY]
      expiration_date:
        type: DATE
        constraints: [UNIQUE, NOT NULL]

  option_contracts:
    columns:
      option_id:
        type: BIGSERIAL
        constraints: [PRIMARY KEY]
      ticker_id:
        type: INTEGER
        constraints: [NOT NULL, REFERENCES tickers(ticker_id)]
      expiration_id:
        type: INTEGER
        constraints: [NOT NULL, REFERENCES expirations(expiration_id)]
      strike:
        type: NUMERIC(10,2)
        constraints: [NOT NULL]
      type:
        type: VARCHAR(4)
        constraints: [NOT NULL]
      last_trade_date:
        type: TIMESTAMPTZ
      last_price:
        type: NUMERIC(12,4)
      bid:
        type: NUMERIC(12,4)
      ask:
        type: NUMERIC(12,4)
      change_amt:
        type: NUMERIC(12,4)
      percent_change:
        type: NUMERIC(6,2)
      volume:
        type: INTEGER
      open_interest:
        type: INTEGER
      implied_volatility:
        type: NUMERIC(6,4)
      snapshot_timestamp:
        type: TIMESTAMPTZ
        default: now()
    constraints:
      - UNIQUE(ticker_id, expiration_id, strike, type, snapshot_timestamp)
      - UNIQUE(ticker_id, expiration_id, strike, type)

  option_metrics:
    columns:
      ticker_id:
        type: INTEGER
        constraints: [NOT NULL, REFERENCES tickers(ticker_id)]
      expiration_id:
        type: INTEGER
        constraints: [NOT NULL, REFERENCES expirations(expiration_id)]
      call_oi_sum:    { type: BIGINT }
      put_oi_sum:     { type: BIGINT }
      call_vol_sum:   { type: BIGINT }
      put_vol_sum:    { type: BIGINT }
      call_iv_sum:    { type: NUMERIC }
      put_iv_sum:     { type: NUMERIC }
      max_oi_call:    { type: NUMERIC }
      second_oi_call: { type: NUMERIC }
      third_oi_call:  { type: NUMERIC }
      max_oi_put:     { type: NUMERIC }
      second_oi_put:  { type: NUMERIC }
      third_oi_put:   { type: NUMERIC }
      max_vol_call:   { type: NUMERIC }
      second_vol_call:{ type: NUMERIC }
      third_vol_call: { type: NUMERIC }
      max_vol_put:    { type: NUMERIC }
      second_vol_put: { type: NUMERIC }
      third_vol_put:  { type: NUMERIC }
    constraints:
      - PRIMARY KEY (ticker_id, expiration_id)

  sectors:
    columns:
      sector_id:
        type: SERIAL
        constraints: [PRIMARY KEY]
      sector_name:
        type: TEXT
        constraints: [UNIQUE, NOT NULL]

  industries:
    columns:
      industry_id:
        type: SERIAL
        constraints: [PRIMARY KEY]
      industry_name:
        type: TEXT
        constraints: [NOT NULL]
      sector_id:
        type: INTEGER
        constraints: [NOT NULL, REFERENCES sectors(sector_id)]
    constraints:
      - UNIQUE(industry_name, sector_id)

materialized_views:
  ticker_metrics:
    definition: |
      SELECT
        om.ticker_id,
        SUM(om.call_oi_sum)    AS call_oi_total,
        SUM(om.put_oi_sum)     AS put_oi_total,
        SUM(om.call_vol_sum)   AS call_vol_total,
        SUM(om.put_vol_sum)    AS put_vol_total,
        SUM(om.call_iv_sum)    AS call_iv_total,
        SUM(om.put_iv_sum)     AS put_iv_total
      FROM option_metrics om
      GROUP BY om.ticker_id

  industry_metrics:
    definition: |
      SELECT
        t.industry_id,
        SUM(tm.call_oi_total)   AS industry_call_oi,
        SUM(tm.put_oi_total)    AS industry_put_oi,
        SUM(tm.call_vol_total)  AS industry_call_vol,
        SUM(tm.put_vol_total)   AS industry_put_vol,
        SUM(tm.call_iv_total)   AS industry_call_iv,
        SUM(tm.put_iv_total)    AS industry_put_iv
      FROM ticker_metrics tm
      JOIN tickers t USING (ticker_id)
      GROUP BY t.industry_id

  sector_metrics:
    definition: |
      SELECT
        i.sector_id,
        SUM(im.industry_call_oi)  AS sector_call_oi,
        SUM(im.industry_put_oi)   AS sector_put_oi,
        SUM(im.industry_call_vol) AS sector_call_vol,
        SUM(im.industry_put_vol)  AS sector_put_vol,
        SUM(im.industry_call_iv)  AS sector_call_iv,
        SUM(im.industry_put_iv)   AS sector_put_iv
      FROM industry_metrics im
      JOIN industries i USING (industry_id)
      GROUP BY i.sector_id
